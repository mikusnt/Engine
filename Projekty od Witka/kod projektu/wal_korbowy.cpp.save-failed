#include "wal_korbowy.h"
#include "wal_korbowy_data.h"

using namespace glm;
namespace std {
//Wal_Korbowy wal_korbowy;

void Wal_Korbowy::DrawSolid() {
     glEnableClientState(GL_VERTEX_ARRAY); //Podczas rysowania u¿ywaj tablicy wierzcho³ków
    glEnableClientState(GL_COLOR_ARRAY); //Podczas rysowania u¿ywaj tablicy kolorów
    glEnableClientState(GL_NORMAL_ARRAY);

    vec3 color = vec3(0.8f, 0.8f, 0.8f);
    float wal_korbowyColors[wal_korbowyVertices * 3];
    for (int i = 0; i < wal_korbowyVertices; i++) {
        wal_korbowyColors[i*3] = color.x;
        wal_korbowyColors[i*3 + 1] = color.y;
        wal_korbowyColors[i*3 + 2] = color.z;
    }
    glVertexPointer(3,GL_FLOAT,0,wal_korbowyPositions); //Ustaw tablicê myCubeVertices jako tablicê wierzcho³ków
    glColorPointer(3,GL_FLOAT,0,wal_korbowyColors); //Ustaw tablicê myCubeColors jako tablicê kolorów
    glNormalPointer( GL_FLOAT, 0, wal_korbowyNormals);

    glDrawArrays(GL_TRIANGLES,0,wal_korbowyVertices); //Rysuj model

    //Posprz¹taj po sobie
    glDisableClientState(GL_VERTEX_ARRAY);
    glDisableClientState(GL_COLOR_ARRAY);
    glDisableClientState(GL_NORMAL_ARRAY);
}
}
